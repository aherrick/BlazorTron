name: Build and Publish Electron.NET App

on:
  push:
    branches:
      - main  # Change this to your release branch if necessary

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '9.x' # Set this to the version of .NET Core you are using

    - name: Install Electron.NET CLI
      run: dotnet tool install --global ElectronNET.CLI

    - name: Publish Electron.NET to Windows
      run: electronize build /target win

    - name: Output Run Attempt
      run: echo ${{ github.run_attempt }}

    - name: get Version
      run:  echo "BUILD_VERSION_UPDATE=1.0.${{ github.run_attempt }}" >> $GITHUB_ENV
      shell: bash

    - name: set client version
      run: 'sed -i "s|\"buildVersion\": \".*\"|\"buildVersion\": \"$BUILD_VERSION_UPDATE\"|g" electron.manifest.json'
      shell: bash

    # - name: Write release version
    #   run: |
    #     VERSION=${GITHUB_REF_NAME#v}
    #     echo Version: $VERSION
    #     echo "VERSION=$VERSION" >> $GITHUB_ENV
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: bin/Desktop/BlazorTron*.exe # forward slashes MUST be used here, otherwise no artifacts will be found
        tag_name: ${{ env.BUILD_VERSION_UPDATE }}



  #   - name: Upload Build Artifacts
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: Electron-App-Windows
  #       path: 'obj/desktop/win/**/*' # Path where Electron.NET stores the output Windows build

  # publish:
  #   runs-on: windows-latest
  #   needs: build
  #   steps:
  #   - name: Download Build Artifacts
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: Electron-App-Windows
  #       path: 'build'
#
    # - name: Generate Windows Installer with Squirrel
    #   run: |
    #     cd build
    #     npx electron-builder --win --config electron-builder.json

    # - name: Create Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: |
    #       build/*.exe # Adjust this path to where the installer is generated
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Clean up after build
    #   run: rm -rf build/